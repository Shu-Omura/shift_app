version: 2.1

executors:
  default:
    docker:
      - image: circleci/ruby:2.7.1-node-browsers-legacy
        environment: 
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          DATABASE_URL: postgres://postgres:password@localhost:5432/shuapp_test
          RAILS_ENV: test
      - image: circleci/postgres
        environment:
          POSTGRES_PASSWORD: password

commands:
  configure_bundle:
    steps:
      - run:
          name: Configure Bundler
          command: |
            gem update --system
            gem install bundler

  bundle_with_cache:
    steps:
      - restore_cache:
          keys:
            - shuapp-bundle-{{ checksum "Gemfile.lock" }}
            - shuapp-bundle-
      - run:
          name: Bundle Install
          command: bundle check || bundle install --jobs=8 --clean
      - save_cache:
          key: shuapp-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  
  yarn_with_cache:
    steps:
      - restore_cache:
          keys:
            - shuapp-yarn-{{ checksum "yarn.lock" }}
            - shuapp-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: shuapp-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  build:
    executor: default
    steps:
      - checkout
      - configure_bundle
      - bundle_with_cache
      - yarn_with_cache
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
      - run:
          name: Database setup
          command: bin/rails db:create db:schema:load --trace
  rspec:
    executor: default
    steps:
      - checkout
      - configure_bundle
      - bundle_with_cache
      - run:
          name: Run rspec
          command: |
            bundle exec rspec

  rubocop:
    executor: default
    steps:
      - checkout
      - configure_bundle
      - bundle_with_cache
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel

  deploy:
    docker:
      - image: sue445/heroku-cli
    steps:
      - checkout
      - build-tools/install-ci-tools
      - jq/install
      - run:
          name: Identify who I am
          command: echo 'export MY_EMAIL=`heroku auth:whoami | tail -n 1`' >> $BASH_ENV
      - run:
          name: Identify Heroku app names to destroy
          command: echo 'export APP_NAMES_TO_REMOVE=`heroku apps --json | jq -r "map(select(.owner.email == "\"$MY_EMAIL\"" and (.name | contains(\"shiftapp\")))) | sort_by(.updated_at) | reverse | .[5:] | .[].name"`' >> $BASH_ENV
      - run:
          name: Delete old apps if needed
          command: for app_name in $APP_NAMES_TO_REMOVE; do heroku apps:destroy -a $app_name -c $app_name; done
      - run:
          name: Define Heroku app name to create
          command: timestamp=`date +%Y%m%d%H%M%S` && echo "export HEROKU_APP_NAME=shiftapp-$timestamp" >> $BASH_ENV
      - run:
          name: Create fresh Heroku app
          command: heroku apps:create $HEROKU_APP_NAME --addons=jawsdb:kitefin
      - run:
          name: Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      - run:
          name: Run post-deploy tasks
          command: |
            heroku run bin/rails db:migrate

orbs:
  build-tools: circleci/build-tools@2.6.3
  jq: circleci/jq@1.9.1
workflows:
  version: 2.1
  build_test_and_deploy:
    jobs:
      - build
      - rspec:
          requires:
            - build
      - rubocop:
          requires:
            - build
      - deploy:
          requires:
            - rspec
            - rubocop